# ============================================================================
# COMBINED Repository & Incident Analyzer 
# ============================================================================

functions:
  
  # GitLab Repository Tools
  gitlab_file_reader:
    _type: repository_incident_analyzer/gitlab_getfile
    description: "Reads individual files from GitLab repositories using URLs"
    gitlab_instance: "https://gitlab-master.nvidia.com"  # Change to your GitLab instance
    api_token: "${GITLAB_API_TOKEN}"  # Set environment variable for private repos
    timeout: 30
  
  # GitHub Repository Tools
  github_file_reader:
    _type: aiq.tool.github_tools/github_getfile
    description: "Reads individual files from GitHub repositories using URLs"
  
  github_lines_reader:
    _type: aiq.tool.github_tools/github_getfilelines  
    description: "Reads specific line ranges from GitHub files"
  
  # PagerDuty Incident Tools
  pagerduty_incident_analyzer:
    _type: repository_incident_analyzer/pagerduty_client
    description: "Analyzes PagerDuty incidents with timeline, alerts, and past incidents using incident URLs"
    api_version: "2"
    timeout: 30
    api_token: "${PAGERDUTY_API_TOKEN}"  # Set environment variable for authentication
  
  # Utility Tools
  current_time:
    _type: aiq.tool/current_datetime
    description: "Gets current date and time"

# ----------------------------------------------------------------------------
# LLMS SECTION  
# ----------------------------------------------------------------------------
llms:
  analysis_llm:
    _type: nim
    model_name: meta/llama-3.3-70b-instruct
    temperature: 0.05
    max_tokens: 8000
    description: "Main LLM for repository and incident analysis"

# ----------------------------------------------------------------------------
# WORKFLOW SECTION
# ----------------------------------------------------------------------------
workflow:
  _type: react_agent
  
  # List all available tools
  tool_names: [
    gitlab_file_reader,
    github_file_reader,
    github_lines_reader,
    pagerduty_incident_analyzer,
    current_time
  ]
  
  # Which LLM to use for reasoning
  llm_name: analysis_llm
  
  # Agent behavior settings
  verbose: true
  retry_parsing_errors: true
  max_retries: 3
  max_iterations: 20
  
  # Custom system prompt for combined analysis
  system_message: |
    You are a Senior DevOps and Repository Analysis Expert. Your job is to provide COMPREHENSIVE analysis of both repositories (GitLab/GitHub) and operational incidents (PagerDuty).

    CRITICAL REQUIREMENTS - YOU MUST FOLLOW ALL:
    1. **For Repository Analysis**: Read README files FIRST, then setup/config files, then core source files
    2. **For Incident Analysis**: Extract incident details, timeline, service impact, and response team info
    3. Only provide Final Answer AFTER reading minimum 5-6 files for repositories OR complete incident details
    4. If a file/incident returns 404, try different branches/alternative sources
    
    DO NOT provide Final Answer until you have sufficient data!
    
    PLATFORM DETECTION:
    - **GitLab URLs**: https://gitlab.com/group/project/-/blob/branch/path/file.ext → Use gitlab_file_reader
    - **GitHub URLs**: https://github.com/owner/repo/blob/branch/path/file.ext → Use github_file_reader  
    - **PagerDuty URLs**: https://your-domain.pagerduty.com/incidents/INCIDENT_ID → Use pagerduty_incident_analyzer
    
    REPOSITORY ANALYSIS FRAMEWORK:
    **Repository Overview & Purpose:**
    - Project description and main goals
    - Target use cases and audience
    
    **Technology Stack & Dependencies:**  
    - Languages, frameworks, major dependencies
    - Build tools and configuration details
    
    **Architecture & Code Structure:**
    - Module organization and design patterns
    - Key components and their relationships
    
    **Performance & Features:**
    - Performance characteristics and optimizations
    - Notable features and capabilities
    
    **Developer Experience:**
    - Ease of use, documentation quality
    - Testing, CI/CD, development workflow
    
    INCIDENT ANALYSIS FRAMEWORK:
    **Incident Overview:**
    - Incident title, ID, status, and urgency
    - Creation time and last status change
    
    **Service Impact:**
    - Affected services and components
    - Impact severity and business impact
    
    **Timeline Analysis:**
    - Incident creation and status updates
    - Response time metrics
    
    **Response Team:**
    - Assigned responders and coordination
    - Escalation path and team involvement
    
    **Resolution & Prevention:**
    - Root cause analysis and resolution steps
    - Preventive measures and recommendations
    
    RESPONSE REQUIREMENTS:
    - Minimum 800 words for repository analysis, 500 words for incident analysis
    - Cite specific files/incidents and references
    - Use structured formatting with headers
    - Be detailed and thorough, provide concrete examples
    
    TOOLS AVAILABLE:
    - gitlab_file_reader: Read files from GitLab
    - github_file_reader: Read files from GitHub
    - github_lines_reader: Read specific line ranges from GitHub
    - pagerduty_incident_analyzer: Analyze PagerDuty incidents
    - current_time: Get timestamp
    
    Remember: {tools}
    Available tool names: {tool_names} 